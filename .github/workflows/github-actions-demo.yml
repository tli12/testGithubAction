name: test and build Python
on: [push]
jobs:
  # job 1. set up interpreter and install dependencies, run the test
  Run-Test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Test with pytest
        run: |
          pip install pytest
          pip install pytest-cov
          pytest tests.py 
  # job 2. scan your code with SonarCloud to detects bugs, vulnerabilities and code smells
  # https://github.com/SonarSource/sonarcloud-github-action
  # "You are running CI analysis while Automatic Analysis is enabled. Please consider disabling one or the other." 
  # Solution: Turn off: sonarcloud -> github project -> adminstration -> Analysis Method -> SonarCloud Automatic Analysis
  # c.f. https://community.sonarsource.com/t/sonarcloud-task-fails-because-of-ci-analysis-and-auto-analysis-running/22937/4
  Scan-Code-by-SonarCloud:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
      # install SonarCloud: https://github.com/marketplace/actions/sonarcloud-scan
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        # Automatic token authentication, Provided by Github. No need to do anything. https://docs.github.com/en/actions/security-guides/automatic-token-authentication
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # First generate a token in SonarCloud account (not project): Security -> Tokens. 
        # Then in GitHub project, Settings -> Secrets -> actions -> New repository secret: set the SONAR_TOKEN environment variable
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  # job 3: deploy to Heroku https://github.com/marketplace/actions/deploy-to-heroku
  # need to have some file in the root directory of the repository, s.t. after deployed to Heroku, Heroko can detect which pl the project is in and run the program in it. Otherwise Heroka will "No default language could be detected for this app" during deployment attempt.
  # for Python,  https://elements.heroku.com/buildpacks/heroku/heroku-buildpack-python,  https://stackoverflow.com/a/72768064, https://stackoverflow.com/a/43472063
  # - requirements.txt: specify the dependencies, where no need to specify the version of each dependency. needed at the root directory of the repo. https://stackoverflow.com/questions/55052434/does-python-requirements-file-have-to-specify-version https://learnpython.com/blog/python-requirements-file/ https://pip.pypa.io/en/stable/user_guide/#requirements-files
  # - runtime.txt: version of python interpreter. optional, if omitted, using default version of Python. https://stackoverflow.com/questions/61492883/python-runtime-txt-to-specify-the-python-runtime-version
  # - Procfile: web server, if the repo is a web application?  https://stackoverflow.com/a/43472063
  Deploy-to-Heroku:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # install Heroku: https://github.com/marketplace/actions/deploy-to-heroku
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          # first in Heroku online account: account -> Account Settings -> API Key. copy it.
          # then in your project's repository on GitHub, Settings -> Secrets -> actions -> New repository secret: Then enter HEROKU_API_KEY as the name and paste the copied API Key as the value.
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "test-github-action-123456abc" #Must be unique in Heroku. letters must be lower case, not upper case. c.f. error output
          heroku_email: "liting0612@gmail.com"
